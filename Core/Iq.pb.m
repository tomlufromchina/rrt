// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Iq.pb.h"
// @@protoc_insertion_point(imports)

@implementation IqRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [IqRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL IqTypeIsValidValue(IqType value) {
  switch (value) {
    case IqTypeGet:
    case IqTypeSet:
    case IqTypeResult:
      return YES;
    default:
      return NO;
  }
}
BOOL DeviceIsValidValue(Device value) {
  switch (value) {
    case DeviceIphone:
    case DeviceAndroid:
    case DeviceWindowsPhone:
    case DevicePc:
    case DeviceWeb:
      return YES;
    default:
      return NO;
  }
}
BOOL HeartbeatIsValidValue(Heartbeat value) {
  switch (value) {
    case HeartbeatRequest:
    case HeartbeatResponse:
      return YES;
    default:
      return NO;
  }
}
BOOL ServerNodePushTypeIsValidValue(ServerNodePushType value) {
  switch (value) {
    case ServerNodePushTypeJoin:
    case ServerNodePushTypeExit:
      return YES;
    default:
      return NO;
  }
}
@interface IqPacket ()
@property IqType type;
@property (strong) IqAction* action;
@property (strong) IqActionResponse* actionresponse;
@end

@implementation IqPacket

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
  hasType_ = !!value_;
}
@synthesize type;
- (BOOL) hasAction {
  return !!hasAction_;
}
- (void) setHasAction:(BOOL) value_ {
  hasAction_ = !!value_;
}
@synthesize action;
- (BOOL) hasActionresponse {
  return !!hasActionresponse_;
}
- (void) setHasActionresponse:(BOOL) value_ {
  hasActionresponse_ = !!value_;
}
@synthesize actionresponse;
- (id) init {
  if ((self = [super init])) {
    self.type = IqTypeGet;
    self.action = [IqAction defaultInstance];
    self.actionresponse = [IqActionResponse defaultInstance];
  }
  return self;
}
static IqPacket* defaultIqPacketInstance = nil;
+ (void) initialize {
  if (self == [IqPacket class]) {
    defaultIqPacketInstance = [[IqPacket alloc] init];
  }
}
+ (IqPacket*) defaultInstance {
  return defaultIqPacketInstance;
}
- (IqPacket*) defaultInstance {
  return defaultIqPacketInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (self.hasAction) {
    if (!self.action.isInitialized) {
      return NO;
    }
  }
  if (self.hasActionresponse) {
    if (!self.actionresponse.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeEnum:1 value:self.type];
  }
  if (self.hasAction) {
    [output writeMessage:2 value:self.action];
  }
  if (self.hasActionresponse) {
    [output writeMessage:3 value:self.actionresponse];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeEnumSize(1, self.type);
  }
  if (self.hasAction) {
    size_ += computeMessageSize(2, self.action);
  }
  if (self.hasActionresponse) {
    size_ += computeMessageSize(3, self.actionresponse);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (IqPacket*) parseFromData:(NSData*) data {
  return (IqPacket*)[[[IqPacket builder] mergeFromData:data] build];
}
+ (IqPacket*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IqPacket*)[[[IqPacket builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IqPacket*) parseFromInputStream:(NSInputStream*) input {
  return (IqPacket*)[[[IqPacket builder] mergeFromInputStream:input] build];
}
+ (IqPacket*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IqPacket*)[[[IqPacket builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IqPacket*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IqPacket*)[[[IqPacket builder] mergeFromCodedInputStream:input] build];
}
+ (IqPacket*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IqPacket*)[[[IqPacket builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IqPacketBuilder*) builder {
  return [[IqPacketBuilder alloc] init];
}
+ (IqPacketBuilder*) builderWithPrototype:(IqPacket*) prototype {
  return [[IqPacket builder] mergeFrom:prototype];
}
- (IqPacketBuilder*) builder {
  return [IqPacket builder];
}
- (IqPacketBuilder*) toBuilder {
  return [IqPacket builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasAction) {
    [output appendFormat:@"%@%@ {\n", indent, @"action"];
    [self.action writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasActionresponse) {
    [output appendFormat:@"%@%@ {\n", indent, @"actionresponse"];
    [self.actionresponse writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[IqPacket class]]) {
    return NO;
  }
  IqPacket *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasAction == otherMessage.hasAction &&
      (!self.hasAction || [self.action isEqual:otherMessage.action]) &&
      self.hasActionresponse == otherMessage.hasActionresponse &&
      (!self.hasActionresponse || [self.actionresponse isEqual:otherMessage.actionresponse]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasAction) {
    hashCode = hashCode * 31 + [self.action hash];
  }
  if (self.hasActionresponse) {
    hashCode = hashCode * 31 + [self.actionresponse hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface IqPacketBuilder()
@property (strong) IqPacket* result;
@end

@implementation IqPacketBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[IqPacket alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (IqPacketBuilder*) clear {
  self.result = [[IqPacket alloc] init];
  return self;
}
- (IqPacketBuilder*) clone {
  return [IqPacket builderWithPrototype:result];
}
- (IqPacket*) defaultInstance {
  return [IqPacket defaultInstance];
}
- (IqPacket*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IqPacket*) buildPartial {
  IqPacket* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (IqPacketBuilder*) mergeFrom:(IqPacket*) other {
  if (other == [IqPacket defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasAction) {
    [self mergeAction:other.action];
  }
  if (other.hasActionresponse) {
    [self mergeActionresponse:other.actionresponse];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IqPacketBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IqPacketBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        IqType value = (IqType)[input readEnum];
        if (IqTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        IqActionBuilder* subBuilder = [IqAction builder];
        if (self.hasAction) {
          [subBuilder mergeFrom:self.action];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAction:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        IqActionResponseBuilder* subBuilder = [IqActionResponse builder];
        if (self.hasActionresponse) {
          [subBuilder mergeFrom:self.actionresponse];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setActionresponse:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (IqType) type {
  return result.type;
}
- (IqPacketBuilder*) setType:(IqType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (IqPacketBuilder*) clearType {
  result.hasType = NO;
  result.type = IqTypeGet;
  return self;
}
- (BOOL) hasAction {
  return result.hasAction;
}
- (IqAction*) action {
  return result.action;
}
- (IqPacketBuilder*) setAction:(IqAction*) value {
  result.hasAction = YES;
  result.action = value;
  return self;
}
- (IqPacketBuilder*) setActionBuilder:(IqActionBuilder*) builderForValue {
  return [self setAction:[builderForValue build]];
}
- (IqPacketBuilder*) mergeAction:(IqAction*) value {
  if (result.hasAction &&
      result.action != [IqAction defaultInstance]) {
    result.action =
      [[[IqAction builderWithPrototype:result.action] mergeFrom:value] buildPartial];
  } else {
    result.action = value;
  }
  result.hasAction = YES;
  return self;
}
- (IqPacketBuilder*) clearAction {
  result.hasAction = NO;
  result.action = [IqAction defaultInstance];
  return self;
}
- (BOOL) hasActionresponse {
  return result.hasActionresponse;
}
- (IqActionResponse*) actionresponse {
  return result.actionresponse;
}
- (IqPacketBuilder*) setActionresponse:(IqActionResponse*) value {
  result.hasActionresponse = YES;
  result.actionresponse = value;
  return self;
}
- (IqPacketBuilder*) setActionresponseBuilder:(IqActionResponseBuilder*) builderForValue {
  return [self setActionresponse:[builderForValue build]];
}
- (IqPacketBuilder*) mergeActionresponse:(IqActionResponse*) value {
  if (result.hasActionresponse &&
      result.actionresponse != [IqActionResponse defaultInstance]) {
    result.actionresponse =
      [[[IqActionResponse builderWithPrototype:result.actionresponse] mergeFrom:value] buildPartial];
  } else {
    result.actionresponse = value;
  }
  result.hasActionresponse = YES;
  return self;
}
- (IqPacketBuilder*) clearActionresponse {
  result.hasActionresponse = NO;
  result.actionresponse = [IqActionResponse defaultInstance];
  return self;
}
@end

@interface IqAction ()
@property Heartbeat heartbeatRequest;
@property (strong) LoginAction* loginaction;
@property (strong) StDLoginAction* stdloginaction;
@property (strong) StSLoginAction* stsloginaction;
@property (strong) ServerNodesPush* servernodes;
@property (strong) PushNotice* pushnotice;
@end

@implementation IqAction

- (BOOL) hasHeartbeatRequest {
  return !!hasHeartbeatRequest_;
}
- (void) setHasHeartbeatRequest:(BOOL) value_ {
  hasHeartbeatRequest_ = !!value_;
}
@synthesize heartbeatRequest;
- (BOOL) hasLoginaction {
  return !!hasLoginaction_;
}
- (void) setHasLoginaction:(BOOL) value_ {
  hasLoginaction_ = !!value_;
}
@synthesize loginaction;
- (BOOL) hasStdloginaction {
  return !!hasStdloginaction_;
}
- (void) setHasStdloginaction:(BOOL) value_ {
  hasStdloginaction_ = !!value_;
}
@synthesize stdloginaction;
- (BOOL) hasStsloginaction {
  return !!hasStsloginaction_;
}
- (void) setHasStsloginaction:(BOOL) value_ {
  hasStsloginaction_ = !!value_;
}
@synthesize stsloginaction;
- (BOOL) hasServernodes {
  return !!hasServernodes_;
}
- (void) setHasServernodes:(BOOL) value_ {
  hasServernodes_ = !!value_;
}
@synthesize servernodes;
- (BOOL) hasPushnotice {
  return !!hasPushnotice_;
}
- (void) setHasPushnotice:(BOOL) value_ {
  hasPushnotice_ = !!value_;
}
@synthesize pushnotice;
- (id) init {
  if ((self = [super init])) {
    self.heartbeatRequest = HeartbeatRequest;
    self.loginaction = [LoginAction defaultInstance];
    self.stdloginaction = [StDLoginAction defaultInstance];
    self.stsloginaction = [StSLoginAction defaultInstance];
    self.servernodes = [ServerNodesPush defaultInstance];
    self.pushnotice = [PushNotice defaultInstance];
  }
  return self;
}
static IqAction* defaultIqActionInstance = nil;
+ (void) initialize {
  if (self == [IqAction class]) {
    defaultIqActionInstance = [[IqAction alloc] init];
  }
}
+ (IqAction*) defaultInstance {
  return defaultIqActionInstance;
}
- (IqAction*) defaultInstance {
  return defaultIqActionInstance;
}
- (BOOL) isInitialized {
  if (self.hasStsloginaction) {
    if (!self.stsloginaction.isInitialized) {
      return NO;
    }
  }
  if (self.hasServernodes) {
    if (!self.servernodes.isInitialized) {
      return NO;
    }
  }
  if (self.hasPushnotice) {
    if (!self.pushnotice.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasHeartbeatRequest) {
    [output writeEnum:1 value:self.heartbeatRequest];
  }
  if (self.hasLoginaction) {
    [output writeMessage:2 value:self.loginaction];
  }
  if (self.hasStdloginaction) {
    [output writeMessage:3 value:self.stdloginaction];
  }
  if (self.hasStsloginaction) {
    [output writeMessage:4 value:self.stsloginaction];
  }
  if (self.hasServernodes) {
    [output writeMessage:5 value:self.servernodes];
  }
  if (self.hasPushnotice) {
    [output writeMessage:6 value:self.pushnotice];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasHeartbeatRequest) {
    size_ += computeEnumSize(1, self.heartbeatRequest);
  }
  if (self.hasLoginaction) {
    size_ += computeMessageSize(2, self.loginaction);
  }
  if (self.hasStdloginaction) {
    size_ += computeMessageSize(3, self.stdloginaction);
  }
  if (self.hasStsloginaction) {
    size_ += computeMessageSize(4, self.stsloginaction);
  }
  if (self.hasServernodes) {
    size_ += computeMessageSize(5, self.servernodes);
  }
  if (self.hasPushnotice) {
    size_ += computeMessageSize(6, self.pushnotice);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (IqAction*) parseFromData:(NSData*) data {
  return (IqAction*)[[[IqAction builder] mergeFromData:data] build];
}
+ (IqAction*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IqAction*)[[[IqAction builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IqAction*) parseFromInputStream:(NSInputStream*) input {
  return (IqAction*)[[[IqAction builder] mergeFromInputStream:input] build];
}
+ (IqAction*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IqAction*)[[[IqAction builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IqAction*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IqAction*)[[[IqAction builder] mergeFromCodedInputStream:input] build];
}
+ (IqAction*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IqAction*)[[[IqAction builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IqActionBuilder*) builder {
  return [[IqActionBuilder alloc] init];
}
+ (IqActionBuilder*) builderWithPrototype:(IqAction*) prototype {
  return [[IqAction builder] mergeFrom:prototype];
}
- (IqActionBuilder*) builder {
  return [IqAction builder];
}
- (IqActionBuilder*) toBuilder {
  return [IqAction builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasHeartbeatRequest) {
    [output appendFormat:@"%@%@: %@\n", indent, @"heartbeatRequest", [NSNumber numberWithInteger:self.heartbeatRequest]];
  }
  if (self.hasLoginaction) {
    [output appendFormat:@"%@%@ {\n", indent, @"loginaction"];
    [self.loginaction writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStdloginaction) {
    [output appendFormat:@"%@%@ {\n", indent, @"stdloginaction"];
    [self.stdloginaction writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStsloginaction) {
    [output appendFormat:@"%@%@ {\n", indent, @"stsloginaction"];
    [self.stsloginaction writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasServernodes) {
    [output appendFormat:@"%@%@ {\n", indent, @"servernodes"];
    [self.servernodes writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPushnotice) {
    [output appendFormat:@"%@%@ {\n", indent, @"pushnotice"];
    [self.pushnotice writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[IqAction class]]) {
    return NO;
  }
  IqAction *otherMessage = other;
  return
      self.hasHeartbeatRequest == otherMessage.hasHeartbeatRequest &&
      (!self.hasHeartbeatRequest || self.heartbeatRequest == otherMessage.heartbeatRequest) &&
      self.hasLoginaction == otherMessage.hasLoginaction &&
      (!self.hasLoginaction || [self.loginaction isEqual:otherMessage.loginaction]) &&
      self.hasStdloginaction == otherMessage.hasStdloginaction &&
      (!self.hasStdloginaction || [self.stdloginaction isEqual:otherMessage.stdloginaction]) &&
      self.hasStsloginaction == otherMessage.hasStsloginaction &&
      (!self.hasStsloginaction || [self.stsloginaction isEqual:otherMessage.stsloginaction]) &&
      self.hasServernodes == otherMessage.hasServernodes &&
      (!self.hasServernodes || [self.servernodes isEqual:otherMessage.servernodes]) &&
      self.hasPushnotice == otherMessage.hasPushnotice &&
      (!self.hasPushnotice || [self.pushnotice isEqual:otherMessage.pushnotice]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasHeartbeatRequest) {
    hashCode = hashCode * 31 + self.heartbeatRequest;
  }
  if (self.hasLoginaction) {
    hashCode = hashCode * 31 + [self.loginaction hash];
  }
  if (self.hasStdloginaction) {
    hashCode = hashCode * 31 + [self.stdloginaction hash];
  }
  if (self.hasStsloginaction) {
    hashCode = hashCode * 31 + [self.stsloginaction hash];
  }
  if (self.hasServernodes) {
    hashCode = hashCode * 31 + [self.servernodes hash];
  }
  if (self.hasPushnotice) {
    hashCode = hashCode * 31 + [self.pushnotice hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface IqActionBuilder()
@property (strong) IqAction* result;
@end

@implementation IqActionBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[IqAction alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (IqActionBuilder*) clear {
  self.result = [[IqAction alloc] init];
  return self;
}
- (IqActionBuilder*) clone {
  return [IqAction builderWithPrototype:result];
}
- (IqAction*) defaultInstance {
  return [IqAction defaultInstance];
}
- (IqAction*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IqAction*) buildPartial {
  IqAction* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (IqActionBuilder*) mergeFrom:(IqAction*) other {
  if (other == [IqAction defaultInstance]) {
    return self;
  }
  if (other.hasHeartbeatRequest) {
    [self setHeartbeatRequest:other.heartbeatRequest];
  }
  if (other.hasLoginaction) {
    [self mergeLoginaction:other.loginaction];
  }
  if (other.hasStdloginaction) {
    [self mergeStdloginaction:other.stdloginaction];
  }
  if (other.hasStsloginaction) {
    [self mergeStsloginaction:other.stsloginaction];
  }
  if (other.hasServernodes) {
    [self mergeServernodes:other.servernodes];
  }
  if (other.hasPushnotice) {
    [self mergePushnotice:other.pushnotice];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IqActionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IqActionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        Heartbeat value = (Heartbeat)[input readEnum];
        if (HeartbeatIsValidValue(value)) {
          [self setHeartbeatRequest:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        LoginActionBuilder* subBuilder = [LoginAction builder];
        if (self.hasLoginaction) {
          [subBuilder mergeFrom:self.loginaction];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLoginaction:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        StDLoginActionBuilder* subBuilder = [StDLoginAction builder];
        if (self.hasStdloginaction) {
          [subBuilder mergeFrom:self.stdloginaction];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStdloginaction:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        StSLoginActionBuilder* subBuilder = [StSLoginAction builder];
        if (self.hasStsloginaction) {
          [subBuilder mergeFrom:self.stsloginaction];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStsloginaction:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        ServerNodesPushBuilder* subBuilder = [ServerNodesPush builder];
        if (self.hasServernodes) {
          [subBuilder mergeFrom:self.servernodes];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setServernodes:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        PushNoticeBuilder* subBuilder = [PushNotice builder];
        if (self.hasPushnotice) {
          [subBuilder mergeFrom:self.pushnotice];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPushnotice:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasHeartbeatRequest {
  return result.hasHeartbeatRequest;
}
- (Heartbeat) heartbeatRequest {
  return result.heartbeatRequest;
}
- (IqActionBuilder*) setHeartbeatRequest:(Heartbeat) value {
  result.hasHeartbeatRequest = YES;
  result.heartbeatRequest = value;
  return self;
}
- (IqActionBuilder*) clearHeartbeatRequest {
  result.hasHeartbeatRequest = NO;
  result.heartbeatRequest = HeartbeatRequest;
  return self;
}
- (BOOL) hasLoginaction {
  return result.hasLoginaction;
}
- (LoginAction*) loginaction {
  return result.loginaction;
}
- (IqActionBuilder*) setLoginaction:(LoginAction*) value {
  result.hasLoginaction = YES;
  result.loginaction = value;
  return self;
}
- (IqActionBuilder*) setLoginactionBuilder:(LoginActionBuilder*) builderForValue {
  return [self setLoginaction:[builderForValue build]];
}
- (IqActionBuilder*) mergeLoginaction:(LoginAction*) value {
  if (result.hasLoginaction &&
      result.loginaction != [LoginAction defaultInstance]) {
    result.loginaction =
      [[[LoginAction builderWithPrototype:result.loginaction] mergeFrom:value] buildPartial];
  } else {
    result.loginaction = value;
  }
  result.hasLoginaction = YES;
  return self;
}
- (IqActionBuilder*) clearLoginaction {
  result.hasLoginaction = NO;
  result.loginaction = [LoginAction defaultInstance];
  return self;
}
- (BOOL) hasStdloginaction {
  return result.hasStdloginaction;
}
- (StDLoginAction*) stdloginaction {
  return result.stdloginaction;
}
- (IqActionBuilder*) setStdloginaction:(StDLoginAction*) value {
  result.hasStdloginaction = YES;
  result.stdloginaction = value;
  return self;
}
- (IqActionBuilder*) setStdloginactionBuilder:(StDLoginActionBuilder*) builderForValue {
  return [self setStdloginaction:[builderForValue build]];
}
- (IqActionBuilder*) mergeStdloginaction:(StDLoginAction*) value {
  if (result.hasStdloginaction &&
      result.stdloginaction != [StDLoginAction defaultInstance]) {
    result.stdloginaction =
      [[[StDLoginAction builderWithPrototype:result.stdloginaction] mergeFrom:value] buildPartial];
  } else {
    result.stdloginaction = value;
  }
  result.hasStdloginaction = YES;
  return self;
}
- (IqActionBuilder*) clearStdloginaction {
  result.hasStdloginaction = NO;
  result.stdloginaction = [StDLoginAction defaultInstance];
  return self;
}
- (BOOL) hasStsloginaction {
  return result.hasStsloginaction;
}
- (StSLoginAction*) stsloginaction {
  return result.stsloginaction;
}
- (IqActionBuilder*) setStsloginaction:(StSLoginAction*) value {
  result.hasStsloginaction = YES;
  result.stsloginaction = value;
  return self;
}
- (IqActionBuilder*) setStsloginactionBuilder:(StSLoginActionBuilder*) builderForValue {
  return [self setStsloginaction:[builderForValue build]];
}
- (IqActionBuilder*) mergeStsloginaction:(StSLoginAction*) value {
  if (result.hasStsloginaction &&
      result.stsloginaction != [StSLoginAction defaultInstance]) {
    result.stsloginaction =
      [[[StSLoginAction builderWithPrototype:result.stsloginaction] mergeFrom:value] buildPartial];
  } else {
    result.stsloginaction = value;
  }
  result.hasStsloginaction = YES;
  return self;
}
- (IqActionBuilder*) clearStsloginaction {
  result.hasStsloginaction = NO;
  result.stsloginaction = [StSLoginAction defaultInstance];
  return self;
}
- (BOOL) hasServernodes {
  return result.hasServernodes;
}
- (ServerNodesPush*) servernodes {
  return result.servernodes;
}
- (IqActionBuilder*) setServernodes:(ServerNodesPush*) value {
  result.hasServernodes = YES;
  result.servernodes = value;
  return self;
}
- (IqActionBuilder*) setServernodesBuilder:(ServerNodesPushBuilder*) builderForValue {
  return [self setServernodes:[builderForValue build]];
}
- (IqActionBuilder*) mergeServernodes:(ServerNodesPush*) value {
  if (result.hasServernodes &&
      result.servernodes != [ServerNodesPush defaultInstance]) {
    result.servernodes =
      [[[ServerNodesPush builderWithPrototype:result.servernodes] mergeFrom:value] buildPartial];
  } else {
    result.servernodes = value;
  }
  result.hasServernodes = YES;
  return self;
}
- (IqActionBuilder*) clearServernodes {
  result.hasServernodes = NO;
  result.servernodes = [ServerNodesPush defaultInstance];
  return self;
}
- (BOOL) hasPushnotice {
  return result.hasPushnotice;
}
- (PushNotice*) pushnotice {
  return result.pushnotice;
}
- (IqActionBuilder*) setPushnotice:(PushNotice*) value {
  result.hasPushnotice = YES;
  result.pushnotice = value;
  return self;
}
- (IqActionBuilder*) setPushnoticeBuilder:(PushNoticeBuilder*) builderForValue {
  return [self setPushnotice:[builderForValue build]];
}
- (IqActionBuilder*) mergePushnotice:(PushNotice*) value {
  if (result.hasPushnotice &&
      result.pushnotice != [PushNotice defaultInstance]) {
    result.pushnotice =
      [[[PushNotice builderWithPrototype:result.pushnotice] mergeFrom:value] buildPartial];
  } else {
    result.pushnotice = value;
  }
  result.hasPushnotice = YES;
  return self;
}
- (IqActionBuilder*) clearPushnotice {
  result.hasPushnotice = NO;
  result.pushnotice = [PushNotice defaultInstance];
  return self;
}
@end

@interface IqActionResponse ()
@property Heartbeat heartbeatResponse;
@property (strong) LoginResponse* loginresponse;
@property (strong) StDLoginResponse* stdloginresponse;
@property (strong) StSLoginResponse* stsloginresponse;
@property (strong) ServerNodesPush* servernodes;
@property (strong) PushNotice* pushnotice;
@end

@implementation IqActionResponse

- (BOOL) hasHeartbeatResponse {
  return !!hasHeartbeatResponse_;
}
- (void) setHasHeartbeatResponse:(BOOL) value_ {
  hasHeartbeatResponse_ = !!value_;
}
@synthesize heartbeatResponse;
- (BOOL) hasLoginresponse {
  return !!hasLoginresponse_;
}
- (void) setHasLoginresponse:(BOOL) value_ {
  hasLoginresponse_ = !!value_;
}
@synthesize loginresponse;
- (BOOL) hasStdloginresponse {
  return !!hasStdloginresponse_;
}
- (void) setHasStdloginresponse:(BOOL) value_ {
  hasStdloginresponse_ = !!value_;
}
@synthesize stdloginresponse;
- (BOOL) hasStsloginresponse {
  return !!hasStsloginresponse_;
}
- (void) setHasStsloginresponse:(BOOL) value_ {
  hasStsloginresponse_ = !!value_;
}
@synthesize stsloginresponse;
- (BOOL) hasServernodes {
  return !!hasServernodes_;
}
- (void) setHasServernodes:(BOOL) value_ {
  hasServernodes_ = !!value_;
}
@synthesize servernodes;
- (BOOL) hasPushnotice {
  return !!hasPushnotice_;
}
- (void) setHasPushnotice:(BOOL) value_ {
  hasPushnotice_ = !!value_;
}
@synthesize pushnotice;
- (id) init {
  if ((self = [super init])) {
    self.heartbeatResponse = HeartbeatRequest;
    self.loginresponse = [LoginResponse defaultInstance];
    self.stdloginresponse = [StDLoginResponse defaultInstance];
    self.stsloginresponse = [StSLoginResponse defaultInstance];
    self.servernodes = [ServerNodesPush defaultInstance];
    self.pushnotice = [PushNotice defaultInstance];
  }
  return self;
}
static IqActionResponse* defaultIqActionResponseInstance = nil;
+ (void) initialize {
  if (self == [IqActionResponse class]) {
    defaultIqActionResponseInstance = [[IqActionResponse alloc] init];
  }
}
+ (IqActionResponse*) defaultInstance {
  return defaultIqActionResponseInstance;
}
- (IqActionResponse*) defaultInstance {
  return defaultIqActionResponseInstance;
}
- (BOOL) isInitialized {
  if (self.hasLoginresponse) {
    if (!self.loginresponse.isInitialized) {
      return NO;
    }
  }
  if (self.hasStdloginresponse) {
    if (!self.stdloginresponse.isInitialized) {
      return NO;
    }
  }
  if (self.hasStsloginresponse) {
    if (!self.stsloginresponse.isInitialized) {
      return NO;
    }
  }
  if (self.hasServernodes) {
    if (!self.servernodes.isInitialized) {
      return NO;
    }
  }
  if (self.hasPushnotice) {
    if (!self.pushnotice.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasHeartbeatResponse) {
    [output writeEnum:1 value:self.heartbeatResponse];
  }
  if (self.hasLoginresponse) {
    [output writeMessage:2 value:self.loginresponse];
  }
  if (self.hasStdloginresponse) {
    [output writeMessage:3 value:self.stdloginresponse];
  }
  if (self.hasStsloginresponse) {
    [output writeMessage:4 value:self.stsloginresponse];
  }
  if (self.hasServernodes) {
    [output writeMessage:5 value:self.servernodes];
  }
  if (self.hasPushnotice) {
    [output writeMessage:6 value:self.pushnotice];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasHeartbeatResponse) {
    size_ += computeEnumSize(1, self.heartbeatResponse);
  }
  if (self.hasLoginresponse) {
    size_ += computeMessageSize(2, self.loginresponse);
  }
  if (self.hasStdloginresponse) {
    size_ += computeMessageSize(3, self.stdloginresponse);
  }
  if (self.hasStsloginresponse) {
    size_ += computeMessageSize(4, self.stsloginresponse);
  }
  if (self.hasServernodes) {
    size_ += computeMessageSize(5, self.servernodes);
  }
  if (self.hasPushnotice) {
    size_ += computeMessageSize(6, self.pushnotice);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (IqActionResponse*) parseFromData:(NSData*) data {
  return (IqActionResponse*)[[[IqActionResponse builder] mergeFromData:data] build];
}
+ (IqActionResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IqActionResponse*)[[[IqActionResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IqActionResponse*) parseFromInputStream:(NSInputStream*) input {
  return (IqActionResponse*)[[[IqActionResponse builder] mergeFromInputStream:input] build];
}
+ (IqActionResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IqActionResponse*)[[[IqActionResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IqActionResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IqActionResponse*)[[[IqActionResponse builder] mergeFromCodedInputStream:input] build];
}
+ (IqActionResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IqActionResponse*)[[[IqActionResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IqActionResponseBuilder*) builder {
  return [[IqActionResponseBuilder alloc] init];
}
+ (IqActionResponseBuilder*) builderWithPrototype:(IqActionResponse*) prototype {
  return [[IqActionResponse builder] mergeFrom:prototype];
}
- (IqActionResponseBuilder*) builder {
  return [IqActionResponse builder];
}
- (IqActionResponseBuilder*) toBuilder {
  return [IqActionResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasHeartbeatResponse) {
    [output appendFormat:@"%@%@: %@\n", indent, @"heartbeatResponse", [NSNumber numberWithInteger:self.heartbeatResponse]];
  }
  if (self.hasLoginresponse) {
    [output appendFormat:@"%@%@ {\n", indent, @"loginresponse"];
    [self.loginresponse writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStdloginresponse) {
    [output appendFormat:@"%@%@ {\n", indent, @"stdloginresponse"];
    [self.stdloginresponse writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStsloginresponse) {
    [output appendFormat:@"%@%@ {\n", indent, @"stsloginresponse"];
    [self.stsloginresponse writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasServernodes) {
    [output appendFormat:@"%@%@ {\n", indent, @"servernodes"];
    [self.servernodes writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPushnotice) {
    [output appendFormat:@"%@%@ {\n", indent, @"pushnotice"];
    [self.pushnotice writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[IqActionResponse class]]) {
    return NO;
  }
  IqActionResponse *otherMessage = other;
  return
      self.hasHeartbeatResponse == otherMessage.hasHeartbeatResponse &&
      (!self.hasHeartbeatResponse || self.heartbeatResponse == otherMessage.heartbeatResponse) &&
      self.hasLoginresponse == otherMessage.hasLoginresponse &&
      (!self.hasLoginresponse || [self.loginresponse isEqual:otherMessage.loginresponse]) &&
      self.hasStdloginresponse == otherMessage.hasStdloginresponse &&
      (!self.hasStdloginresponse || [self.stdloginresponse isEqual:otherMessage.stdloginresponse]) &&
      self.hasStsloginresponse == otherMessage.hasStsloginresponse &&
      (!self.hasStsloginresponse || [self.stsloginresponse isEqual:otherMessage.stsloginresponse]) &&
      self.hasServernodes == otherMessage.hasServernodes &&
      (!self.hasServernodes || [self.servernodes isEqual:otherMessage.servernodes]) &&
      self.hasPushnotice == otherMessage.hasPushnotice &&
      (!self.hasPushnotice || [self.pushnotice isEqual:otherMessage.pushnotice]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasHeartbeatResponse) {
    hashCode = hashCode * 31 + self.heartbeatResponse;
  }
  if (self.hasLoginresponse) {
    hashCode = hashCode * 31 + [self.loginresponse hash];
  }
  if (self.hasStdloginresponse) {
    hashCode = hashCode * 31 + [self.stdloginresponse hash];
  }
  if (self.hasStsloginresponse) {
    hashCode = hashCode * 31 + [self.stsloginresponse hash];
  }
  if (self.hasServernodes) {
    hashCode = hashCode * 31 + [self.servernodes hash];
  }
  if (self.hasPushnotice) {
    hashCode = hashCode * 31 + [self.pushnotice hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface IqActionResponseBuilder()
@property (strong) IqActionResponse* result;
@end

@implementation IqActionResponseBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[IqActionResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (IqActionResponseBuilder*) clear {
  self.result = [[IqActionResponse alloc] init];
  return self;
}
- (IqActionResponseBuilder*) clone {
  return [IqActionResponse builderWithPrototype:result];
}
- (IqActionResponse*) defaultInstance {
  return [IqActionResponse defaultInstance];
}
- (IqActionResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IqActionResponse*) buildPartial {
  IqActionResponse* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (IqActionResponseBuilder*) mergeFrom:(IqActionResponse*) other {
  if (other == [IqActionResponse defaultInstance]) {
    return self;
  }
  if (other.hasHeartbeatResponse) {
    [self setHeartbeatResponse:other.heartbeatResponse];
  }
  if (other.hasLoginresponse) {
    [self mergeLoginresponse:other.loginresponse];
  }
  if (other.hasStdloginresponse) {
    [self mergeStdloginresponse:other.stdloginresponse];
  }
  if (other.hasStsloginresponse) {
    [self mergeStsloginresponse:other.stsloginresponse];
  }
  if (other.hasServernodes) {
    [self mergeServernodes:other.servernodes];
  }
  if (other.hasPushnotice) {
    [self mergePushnotice:other.pushnotice];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IqActionResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IqActionResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        Heartbeat value = (Heartbeat)[input readEnum];
        if (HeartbeatIsValidValue(value)) {
          [self setHeartbeatResponse:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        LoginResponseBuilder* subBuilder = [LoginResponse builder];
        if (self.hasLoginresponse) {
          [subBuilder mergeFrom:self.loginresponse];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLoginresponse:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        StDLoginResponseBuilder* subBuilder = [StDLoginResponse builder];
        if (self.hasStdloginresponse) {
          [subBuilder mergeFrom:self.stdloginresponse];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStdloginresponse:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        StSLoginResponseBuilder* subBuilder = [StSLoginResponse builder];
        if (self.hasStsloginresponse) {
          [subBuilder mergeFrom:self.stsloginresponse];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStsloginresponse:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        ServerNodesPushBuilder* subBuilder = [ServerNodesPush builder];
        if (self.hasServernodes) {
          [subBuilder mergeFrom:self.servernodes];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setServernodes:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        PushNoticeBuilder* subBuilder = [PushNotice builder];
        if (self.hasPushnotice) {
          [subBuilder mergeFrom:self.pushnotice];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPushnotice:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasHeartbeatResponse {
  return result.hasHeartbeatResponse;
}
- (Heartbeat) heartbeatResponse {
  return result.heartbeatResponse;
}
- (IqActionResponseBuilder*) setHeartbeatResponse:(Heartbeat) value {
  result.hasHeartbeatResponse = YES;
  result.heartbeatResponse = value;
  return self;
}
- (IqActionResponseBuilder*) clearHeartbeatResponse {
  result.hasHeartbeatResponse = NO;
  result.heartbeatResponse = HeartbeatRequest;
  return self;
}
- (BOOL) hasLoginresponse {
  return result.hasLoginresponse;
}
- (LoginResponse*) loginresponse {
  return result.loginresponse;
}
- (IqActionResponseBuilder*) setLoginresponse:(LoginResponse*) value {
  result.hasLoginresponse = YES;
  result.loginresponse = value;
  return self;
}
- (IqActionResponseBuilder*) setLoginresponseBuilder:(LoginResponseBuilder*) builderForValue {
  return [self setLoginresponse:[builderForValue build]];
}
- (IqActionResponseBuilder*) mergeLoginresponse:(LoginResponse*) value {
  if (result.hasLoginresponse &&
      result.loginresponse != [LoginResponse defaultInstance]) {
    result.loginresponse =
      [[[LoginResponse builderWithPrototype:result.loginresponse] mergeFrom:value] buildPartial];
  } else {
    result.loginresponse = value;
  }
  result.hasLoginresponse = YES;
  return self;
}
- (IqActionResponseBuilder*) clearLoginresponse {
  result.hasLoginresponse = NO;
  result.loginresponse = [LoginResponse defaultInstance];
  return self;
}
- (BOOL) hasStdloginresponse {
  return result.hasStdloginresponse;
}
- (StDLoginResponse*) stdloginresponse {
  return result.stdloginresponse;
}
- (IqActionResponseBuilder*) setStdloginresponse:(StDLoginResponse*) value {
  result.hasStdloginresponse = YES;
  result.stdloginresponse = value;
  return self;
}
- (IqActionResponseBuilder*) setStdloginresponseBuilder:(StDLoginResponseBuilder*) builderForValue {
  return [self setStdloginresponse:[builderForValue build]];
}
- (IqActionResponseBuilder*) mergeStdloginresponse:(StDLoginResponse*) value {
  if (result.hasStdloginresponse &&
      result.stdloginresponse != [StDLoginResponse defaultInstance]) {
    result.stdloginresponse =
      [[[StDLoginResponse builderWithPrototype:result.stdloginresponse] mergeFrom:value] buildPartial];
  } else {
    result.stdloginresponse = value;
  }
  result.hasStdloginresponse = YES;
  return self;
}
- (IqActionResponseBuilder*) clearStdloginresponse {
  result.hasStdloginresponse = NO;
  result.stdloginresponse = [StDLoginResponse defaultInstance];
  return self;
}
- (BOOL) hasStsloginresponse {
  return result.hasStsloginresponse;
}
- (StSLoginResponse*) stsloginresponse {
  return result.stsloginresponse;
}
- (IqActionResponseBuilder*) setStsloginresponse:(StSLoginResponse*) value {
  result.hasStsloginresponse = YES;
  result.stsloginresponse = value;
  return self;
}
- (IqActionResponseBuilder*) setStsloginresponseBuilder:(StSLoginResponseBuilder*) builderForValue {
  return [self setStsloginresponse:[builderForValue build]];
}
- (IqActionResponseBuilder*) mergeStsloginresponse:(StSLoginResponse*) value {
  if (result.hasStsloginresponse &&
      result.stsloginresponse != [StSLoginResponse defaultInstance]) {
    result.stsloginresponse =
      [[[StSLoginResponse builderWithPrototype:result.stsloginresponse] mergeFrom:value] buildPartial];
  } else {
    result.stsloginresponse = value;
  }
  result.hasStsloginresponse = YES;
  return self;
}
- (IqActionResponseBuilder*) clearStsloginresponse {
  result.hasStsloginresponse = NO;
  result.stsloginresponse = [StSLoginResponse defaultInstance];
  return self;
}
- (BOOL) hasServernodes {
  return result.hasServernodes;
}
- (ServerNodesPush*) servernodes {
  return result.servernodes;
}
- (IqActionResponseBuilder*) setServernodes:(ServerNodesPush*) value {
  result.hasServernodes = YES;
  result.servernodes = value;
  return self;
}
- (IqActionResponseBuilder*) setServernodesBuilder:(ServerNodesPushBuilder*) builderForValue {
  return [self setServernodes:[builderForValue build]];
}
- (IqActionResponseBuilder*) mergeServernodes:(ServerNodesPush*) value {
  if (result.hasServernodes &&
      result.servernodes != [ServerNodesPush defaultInstance]) {
    result.servernodes =
      [[[ServerNodesPush builderWithPrototype:result.servernodes] mergeFrom:value] buildPartial];
  } else {
    result.servernodes = value;
  }
  result.hasServernodes = YES;
  return self;
}
- (IqActionResponseBuilder*) clearServernodes {
  result.hasServernodes = NO;
  result.servernodes = [ServerNodesPush defaultInstance];
  return self;
}
- (BOOL) hasPushnotice {
  return result.hasPushnotice;
}
- (PushNotice*) pushnotice {
  return result.pushnotice;
}
- (IqActionResponseBuilder*) setPushnotice:(PushNotice*) value {
  result.hasPushnotice = YES;
  result.pushnotice = value;
  return self;
}
- (IqActionResponseBuilder*) setPushnoticeBuilder:(PushNoticeBuilder*) builderForValue {
  return [self setPushnotice:[builderForValue build]];
}
- (IqActionResponseBuilder*) mergePushnotice:(PushNotice*) value {
  if (result.hasPushnotice &&
      result.pushnotice != [PushNotice defaultInstance]) {
    result.pushnotice =
      [[[PushNotice builderWithPrototype:result.pushnotice] mergeFrom:value] buildPartial];
  } else {
    result.pushnotice = value;
  }
  result.hasPushnotice = YES;
  return self;
}
- (IqActionResponseBuilder*) clearPushnotice {
  result.hasPushnotice = NO;
  result.pushnotice = [PushNotice defaultInstance];
  return self;
}
@end

@interface LoginAction ()
@property (strong) NSString* account;
@property (strong) NSString* password;
@property (strong) NSString* phone;
@end

@implementation LoginAction

- (BOOL) hasAccount {
  return !!hasAccount_;
}
- (void) setHasAccount:(BOOL) value_ {
  hasAccount_ = !!value_;
}
@synthesize account;
- (BOOL) hasPassword {
  return !!hasPassword_;
}
- (void) setHasPassword:(BOOL) value_ {
  hasPassword_ = !!value_;
}
@synthesize password;
- (BOOL) hasPhone {
  return !!hasPhone_;
}
- (void) setHasPhone:(BOOL) value_ {
  hasPhone_ = !!value_;
}
@synthesize phone;
- (id) init {
  if ((self = [super init])) {
    self.account = @"";
    self.password = @"";
    self.phone = @"";
  }
  return self;
}
static LoginAction* defaultLoginActionInstance = nil;
+ (void) initialize {
  if (self == [LoginAction class]) {
    defaultLoginActionInstance = [[LoginAction alloc] init];
  }
}
+ (LoginAction*) defaultInstance {
  return defaultLoginActionInstance;
}
- (LoginAction*) defaultInstance {
  return defaultLoginActionInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccount) {
    [output writeString:1 value:self.account];
  }
  if (self.hasPassword) {
    [output writeString:2 value:self.password];
  }
  if (self.hasPhone) {
    [output writeString:3 value:self.phone];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccount) {
    size_ += computeStringSize(1, self.account);
  }
  if (self.hasPassword) {
    size_ += computeStringSize(2, self.password);
  }
  if (self.hasPhone) {
    size_ += computeStringSize(3, self.phone);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LoginAction*) parseFromData:(NSData*) data {
  return (LoginAction*)[[[LoginAction builder] mergeFromData:data] build];
}
+ (LoginAction*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginAction*)[[[LoginAction builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoginAction*) parseFromInputStream:(NSInputStream*) input {
  return (LoginAction*)[[[LoginAction builder] mergeFromInputStream:input] build];
}
+ (LoginAction*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginAction*)[[[LoginAction builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginAction*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoginAction*)[[[LoginAction builder] mergeFromCodedInputStream:input] build];
}
+ (LoginAction*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginAction*)[[[LoginAction builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginActionBuilder*) builder {
  return [[LoginActionBuilder alloc] init];
}
+ (LoginActionBuilder*) builderWithPrototype:(LoginAction*) prototype {
  return [[LoginAction builder] mergeFrom:prototype];
}
- (LoginActionBuilder*) builder {
  return [LoginAction builder];
}
- (LoginActionBuilder*) toBuilder {
  return [LoginAction builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"account", self.account];
  }
  if (self.hasPassword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"password", self.password];
  }
  if (self.hasPhone) {
    [output appendFormat:@"%@%@: %@\n", indent, @"phone", self.phone];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[LoginAction class]]) {
    return NO;
  }
  LoginAction *otherMessage = other;
  return
      self.hasAccount == otherMessage.hasAccount &&
      (!self.hasAccount || [self.account isEqual:otherMessage.account]) &&
      self.hasPassword == otherMessage.hasPassword &&
      (!self.hasPassword || [self.password isEqual:otherMessage.password]) &&
      self.hasPhone == otherMessage.hasPhone &&
      (!self.hasPhone || [self.phone isEqual:otherMessage.phone]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAccount) {
    hashCode = hashCode * 31 + [self.account hash];
  }
  if (self.hasPassword) {
    hashCode = hashCode * 31 + [self.password hash];
  }
  if (self.hasPhone) {
    hashCode = hashCode * 31 + [self.phone hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface LoginActionBuilder()
@property (strong) LoginAction* result;
@end

@implementation LoginActionBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[LoginAction alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LoginActionBuilder*) clear {
  self.result = [[LoginAction alloc] init];
  return self;
}
- (LoginActionBuilder*) clone {
  return [LoginAction builderWithPrototype:result];
}
- (LoginAction*) defaultInstance {
  return [LoginAction defaultInstance];
}
- (LoginAction*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoginAction*) buildPartial {
  LoginAction* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (LoginActionBuilder*) mergeFrom:(LoginAction*) other {
  if (other == [LoginAction defaultInstance]) {
    return self;
  }
  if (other.hasAccount) {
    [self setAccount:other.account];
  }
  if (other.hasPassword) {
    [self setPassword:other.password];
  }
  if (other.hasPhone) {
    [self setPhone:other.phone];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoginActionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoginActionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setAccount:[input readString]];
        break;
      }
      case 18: {
        [self setPassword:[input readString]];
        break;
      }
      case 26: {
        [self setPhone:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasAccount {
  return result.hasAccount;
}
- (NSString*) account {
  return result.account;
}
- (LoginActionBuilder*) setAccount:(NSString*) value {
  result.hasAccount = YES;
  result.account = value;
  return self;
}
- (LoginActionBuilder*) clearAccount {
  result.hasAccount = NO;
  result.account = @"";
  return self;
}
- (BOOL) hasPassword {
  return result.hasPassword;
}
- (NSString*) password {
  return result.password;
}
- (LoginActionBuilder*) setPassword:(NSString*) value {
  result.hasPassword = YES;
  result.password = value;
  return self;
}
- (LoginActionBuilder*) clearPassword {
  result.hasPassword = NO;
  result.password = @"";
  return self;
}
- (BOOL) hasPhone {
  return result.hasPhone;
}
- (NSString*) phone {
  return result.phone;
}
- (LoginActionBuilder*) setPhone:(NSString*) value {
  result.hasPhone = YES;
  result.phone = value;
  return self;
}
- (LoginActionBuilder*) clearPhone {
  result.hasPhone = NO;
  result.phone = @"";
  return self;
}
@end

@interface LoginResponse ()
@property SInt32 statecode;
@property (strong) NSString* responsemsg;
@end

@implementation LoginResponse

- (BOOL) hasStatecode {
  return !!hasStatecode_;
}
- (void) setHasStatecode:(BOOL) value_ {
  hasStatecode_ = !!value_;
}
@synthesize statecode;
- (BOOL) hasResponsemsg {
  return !!hasResponsemsg_;
}
- (void) setHasResponsemsg:(BOOL) value_ {
  hasResponsemsg_ = !!value_;
}
@synthesize responsemsg;
- (id) init {
  if ((self = [super init])) {
    self.statecode = 0;
    self.responsemsg = @"";
  }
  return self;
}
static LoginResponse* defaultLoginResponseInstance = nil;
+ (void) initialize {
  if (self == [LoginResponse class]) {
    defaultLoginResponseInstance = [[LoginResponse alloc] init];
  }
}
+ (LoginResponse*) defaultInstance {
  return defaultLoginResponseInstance;
}
- (LoginResponse*) defaultInstance {
  return defaultLoginResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasStatecode) {
    return NO;
  }
  if (!self.hasResponsemsg) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatecode) {
    [output writeInt32:1 value:self.statecode];
  }
  if (self.hasResponsemsg) {
    [output writeString:2 value:self.responsemsg];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatecode) {
    size_ += computeInt32Size(1, self.statecode);
  }
  if (self.hasResponsemsg) {
    size_ += computeStringSize(2, self.responsemsg);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LoginResponse*) parseFromData:(NSData*) data {
  return (LoginResponse*)[[[LoginResponse builder] mergeFromData:data] build];
}
+ (LoginResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponse*)[[[LoginResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoginResponse*) parseFromInputStream:(NSInputStream*) input {
  return (LoginResponse*)[[[LoginResponse builder] mergeFromInputStream:input] build];
}
+ (LoginResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponse*)[[[LoginResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoginResponse*)[[[LoginResponse builder] mergeFromCodedInputStream:input] build];
}
+ (LoginResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponse*)[[[LoginResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginResponseBuilder*) builder {
  return [[LoginResponseBuilder alloc] init];
}
+ (LoginResponseBuilder*) builderWithPrototype:(LoginResponse*) prototype {
  return [[LoginResponse builder] mergeFrom:prototype];
}
- (LoginResponseBuilder*) builder {
  return [LoginResponse builder];
}
- (LoginResponseBuilder*) toBuilder {
  return [LoginResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatecode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"statecode", [NSNumber numberWithInteger:self.statecode]];
  }
  if (self.hasResponsemsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"responsemsg", self.responsemsg];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[LoginResponse class]]) {
    return NO;
  }
  LoginResponse *otherMessage = other;
  return
      self.hasStatecode == otherMessage.hasStatecode &&
      (!self.hasStatecode || self.statecode == otherMessage.statecode) &&
      self.hasResponsemsg == otherMessage.hasResponsemsg &&
      (!self.hasResponsemsg || [self.responsemsg isEqual:otherMessage.responsemsg]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatecode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.statecode] hash];
  }
  if (self.hasResponsemsg) {
    hashCode = hashCode * 31 + [self.responsemsg hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface LoginResponseBuilder()
@property (strong) LoginResponse* result;
@end

@implementation LoginResponseBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[LoginResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LoginResponseBuilder*) clear {
  self.result = [[LoginResponse alloc] init];
  return self;
}
- (LoginResponseBuilder*) clone {
  return [LoginResponse builderWithPrototype:result];
}
- (LoginResponse*) defaultInstance {
  return [LoginResponse defaultInstance];
}
- (LoginResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoginResponse*) buildPartial {
  LoginResponse* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (LoginResponseBuilder*) mergeFrom:(LoginResponse*) other {
  if (other == [LoginResponse defaultInstance]) {
    return self;
  }
  if (other.hasStatecode) {
    [self setStatecode:other.statecode];
  }
  if (other.hasResponsemsg) {
    [self setResponsemsg:other.responsemsg];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoginResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoginResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setStatecode:[input readInt32]];
        break;
      }
      case 18: {
        [self setResponsemsg:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasStatecode {
  return result.hasStatecode;
}
- (SInt32) statecode {
  return result.statecode;
}
- (LoginResponseBuilder*) setStatecode:(SInt32) value {
  result.hasStatecode = YES;
  result.statecode = value;
  return self;
}
- (LoginResponseBuilder*) clearStatecode {
  result.hasStatecode = NO;
  result.statecode = 0;
  return self;
}
- (BOOL) hasResponsemsg {
  return result.hasResponsemsg;
}
- (NSString*) responsemsg {
  return result.responsemsg;
}
- (LoginResponseBuilder*) setResponsemsg:(NSString*) value {
  result.hasResponsemsg = YES;
  result.responsemsg = value;
  return self;
}
- (LoginResponseBuilder*) clearResponsemsg {
  result.hasResponsemsg = NO;
  result.responsemsg = @"";
  return self;
}
@end

@interface StDLoginAction ()
@property (strong) NSString* nodeid;
@end

@implementation StDLoginAction

- (BOOL) hasNodeid {
  return !!hasNodeid_;
}
- (void) setHasNodeid:(BOOL) value_ {
  hasNodeid_ = !!value_;
}
@synthesize nodeid;
- (id) init {
  if ((self = [super init])) {
    self.nodeid = @"";
  }
  return self;
}
static StDLoginAction* defaultStDLoginActionInstance = nil;
+ (void) initialize {
  if (self == [StDLoginAction class]) {
    defaultStDLoginActionInstance = [[StDLoginAction alloc] init];
  }
}
+ (StDLoginAction*) defaultInstance {
  return defaultStDLoginActionInstance;
}
- (StDLoginAction*) defaultInstance {
  return defaultStDLoginActionInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasNodeid) {
    [output writeString:1 value:self.nodeid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasNodeid) {
    size_ += computeStringSize(1, self.nodeid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StDLoginAction*) parseFromData:(NSData*) data {
  return (StDLoginAction*)[[[StDLoginAction builder] mergeFromData:data] build];
}
+ (StDLoginAction*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StDLoginAction*)[[[StDLoginAction builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StDLoginAction*) parseFromInputStream:(NSInputStream*) input {
  return (StDLoginAction*)[[[StDLoginAction builder] mergeFromInputStream:input] build];
}
+ (StDLoginAction*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StDLoginAction*)[[[StDLoginAction builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StDLoginAction*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StDLoginAction*)[[[StDLoginAction builder] mergeFromCodedInputStream:input] build];
}
+ (StDLoginAction*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StDLoginAction*)[[[StDLoginAction builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StDLoginActionBuilder*) builder {
  return [[StDLoginActionBuilder alloc] init];
}
+ (StDLoginActionBuilder*) builderWithPrototype:(StDLoginAction*) prototype {
  return [[StDLoginAction builder] mergeFrom:prototype];
}
- (StDLoginActionBuilder*) builder {
  return [StDLoginAction builder];
}
- (StDLoginActionBuilder*) toBuilder {
  return [StDLoginAction builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasNodeid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nodeid", self.nodeid];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StDLoginAction class]]) {
    return NO;
  }
  StDLoginAction *otherMessage = other;
  return
      self.hasNodeid == otherMessage.hasNodeid &&
      (!self.hasNodeid || [self.nodeid isEqual:otherMessage.nodeid]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasNodeid) {
    hashCode = hashCode * 31 + [self.nodeid hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StDLoginActionBuilder()
@property (strong) StDLoginAction* result;
@end

@implementation StDLoginActionBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StDLoginAction alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StDLoginActionBuilder*) clear {
  self.result = [[StDLoginAction alloc] init];
  return self;
}
- (StDLoginActionBuilder*) clone {
  return [StDLoginAction builderWithPrototype:result];
}
- (StDLoginAction*) defaultInstance {
  return [StDLoginAction defaultInstance];
}
- (StDLoginAction*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StDLoginAction*) buildPartial {
  StDLoginAction* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StDLoginActionBuilder*) mergeFrom:(StDLoginAction*) other {
  if (other == [StDLoginAction defaultInstance]) {
    return self;
  }
  if (other.hasNodeid) {
    [self setNodeid:other.nodeid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StDLoginActionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StDLoginActionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setNodeid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasNodeid {
  return result.hasNodeid;
}
- (NSString*) nodeid {
  return result.nodeid;
}
- (StDLoginActionBuilder*) setNodeid:(NSString*) value {
  result.hasNodeid = YES;
  result.nodeid = value;
  return self;
}
- (StDLoginActionBuilder*) clearNodeid {
  result.hasNodeid = NO;
  result.nodeid = @"";
  return self;
}
@end

@interface StDLoginResponse ()
@property SInt32 statecode;
@property (strong) NSString* node;
@end

@implementation StDLoginResponse

- (BOOL) hasStatecode {
  return !!hasStatecode_;
}
- (void) setHasStatecode:(BOOL) value_ {
  hasStatecode_ = !!value_;
}
@synthesize statecode;
- (BOOL) hasNode {
  return !!hasNode_;
}
- (void) setHasNode:(BOOL) value_ {
  hasNode_ = !!value_;
}
@synthesize node;
- (id) init {
  if ((self = [super init])) {
    self.statecode = 0;
    self.node = @"";
  }
  return self;
}
static StDLoginResponse* defaultStDLoginResponseInstance = nil;
+ (void) initialize {
  if (self == [StDLoginResponse class]) {
    defaultStDLoginResponseInstance = [[StDLoginResponse alloc] init];
  }
}
+ (StDLoginResponse*) defaultInstance {
  return defaultStDLoginResponseInstance;
}
- (StDLoginResponse*) defaultInstance {
  return defaultStDLoginResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasStatecode) {
    return NO;
  }
  if (!self.hasNode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatecode) {
    [output writeInt32:1 value:self.statecode];
  }
  if (self.hasNode) {
    [output writeString:2 value:self.node];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatecode) {
    size_ += computeInt32Size(1, self.statecode);
  }
  if (self.hasNode) {
    size_ += computeStringSize(2, self.node);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StDLoginResponse*) parseFromData:(NSData*) data {
  return (StDLoginResponse*)[[[StDLoginResponse builder] mergeFromData:data] build];
}
+ (StDLoginResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StDLoginResponse*)[[[StDLoginResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StDLoginResponse*) parseFromInputStream:(NSInputStream*) input {
  return (StDLoginResponse*)[[[StDLoginResponse builder] mergeFromInputStream:input] build];
}
+ (StDLoginResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StDLoginResponse*)[[[StDLoginResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StDLoginResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StDLoginResponse*)[[[StDLoginResponse builder] mergeFromCodedInputStream:input] build];
}
+ (StDLoginResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StDLoginResponse*)[[[StDLoginResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StDLoginResponseBuilder*) builder {
  return [[StDLoginResponseBuilder alloc] init];
}
+ (StDLoginResponseBuilder*) builderWithPrototype:(StDLoginResponse*) prototype {
  return [[StDLoginResponse builder] mergeFrom:prototype];
}
- (StDLoginResponseBuilder*) builder {
  return [StDLoginResponse builder];
}
- (StDLoginResponseBuilder*) toBuilder {
  return [StDLoginResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatecode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"statecode", [NSNumber numberWithInteger:self.statecode]];
  }
  if (self.hasNode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"node", self.node];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StDLoginResponse class]]) {
    return NO;
  }
  StDLoginResponse *otherMessage = other;
  return
      self.hasStatecode == otherMessage.hasStatecode &&
      (!self.hasStatecode || self.statecode == otherMessage.statecode) &&
      self.hasNode == otherMessage.hasNode &&
      (!self.hasNode || [self.node isEqual:otherMessage.node]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatecode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.statecode] hash];
  }
  if (self.hasNode) {
    hashCode = hashCode * 31 + [self.node hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StDLoginResponseBuilder()
@property (strong) StDLoginResponse* result;
@end

@implementation StDLoginResponseBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StDLoginResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StDLoginResponseBuilder*) clear {
  self.result = [[StDLoginResponse alloc] init];
  return self;
}
- (StDLoginResponseBuilder*) clone {
  return [StDLoginResponse builderWithPrototype:result];
}
- (StDLoginResponse*) defaultInstance {
  return [StDLoginResponse defaultInstance];
}
- (StDLoginResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StDLoginResponse*) buildPartial {
  StDLoginResponse* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StDLoginResponseBuilder*) mergeFrom:(StDLoginResponse*) other {
  if (other == [StDLoginResponse defaultInstance]) {
    return self;
  }
  if (other.hasStatecode) {
    [self setStatecode:other.statecode];
  }
  if (other.hasNode) {
    [self setNode:other.node];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StDLoginResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StDLoginResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setStatecode:[input readInt32]];
        break;
      }
      case 18: {
        [self setNode:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasStatecode {
  return result.hasStatecode;
}
- (SInt32) statecode {
  return result.statecode;
}
- (StDLoginResponseBuilder*) setStatecode:(SInt32) value {
  result.hasStatecode = YES;
  result.statecode = value;
  return self;
}
- (StDLoginResponseBuilder*) clearStatecode {
  result.hasStatecode = NO;
  result.statecode = 0;
  return self;
}
- (BOOL) hasNode {
  return result.hasNode;
}
- (NSString*) node {
  return result.node;
}
- (StDLoginResponseBuilder*) setNode:(NSString*) value {
  result.hasNode = YES;
  result.node = value;
  return self;
}
- (StDLoginResponseBuilder*) clearNode {
  result.hasNode = NO;
  result.node = @"";
  return self;
}
@end

@interface StSLoginAction ()
@property (strong) NSString* nodeid;
@property (strong) NSString* node;
@end

@implementation StSLoginAction

- (BOOL) hasNodeid {
  return !!hasNodeid_;
}
- (void) setHasNodeid:(BOOL) value_ {
  hasNodeid_ = !!value_;
}
@synthesize nodeid;
- (BOOL) hasNode {
  return !!hasNode_;
}
- (void) setHasNode:(BOOL) value_ {
  hasNode_ = !!value_;
}
@synthesize node;
- (id) init {
  if ((self = [super init])) {
    self.nodeid = @"";
    self.node = @"";
  }
  return self;
}
static StSLoginAction* defaultStSLoginActionInstance = nil;
+ (void) initialize {
  if (self == [StSLoginAction class]) {
    defaultStSLoginActionInstance = [[StSLoginAction alloc] init];
  }
}
+ (StSLoginAction*) defaultInstance {
  return defaultStSLoginActionInstance;
}
- (StSLoginAction*) defaultInstance {
  return defaultStSLoginActionInstance;
}
- (BOOL) isInitialized {
  if (!self.hasNode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasNodeid) {
    [output writeString:1 value:self.nodeid];
  }
  if (self.hasNode) {
    [output writeString:2 value:self.node];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasNodeid) {
    size_ += computeStringSize(1, self.nodeid);
  }
  if (self.hasNode) {
    size_ += computeStringSize(2, self.node);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StSLoginAction*) parseFromData:(NSData*) data {
  return (StSLoginAction*)[[[StSLoginAction builder] mergeFromData:data] build];
}
+ (StSLoginAction*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StSLoginAction*)[[[StSLoginAction builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StSLoginAction*) parseFromInputStream:(NSInputStream*) input {
  return (StSLoginAction*)[[[StSLoginAction builder] mergeFromInputStream:input] build];
}
+ (StSLoginAction*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StSLoginAction*)[[[StSLoginAction builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StSLoginAction*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StSLoginAction*)[[[StSLoginAction builder] mergeFromCodedInputStream:input] build];
}
+ (StSLoginAction*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StSLoginAction*)[[[StSLoginAction builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StSLoginActionBuilder*) builder {
  return [[StSLoginActionBuilder alloc] init];
}
+ (StSLoginActionBuilder*) builderWithPrototype:(StSLoginAction*) prototype {
  return [[StSLoginAction builder] mergeFrom:prototype];
}
- (StSLoginActionBuilder*) builder {
  return [StSLoginAction builder];
}
- (StSLoginActionBuilder*) toBuilder {
  return [StSLoginAction builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasNodeid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nodeid", self.nodeid];
  }
  if (self.hasNode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"node", self.node];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StSLoginAction class]]) {
    return NO;
  }
  StSLoginAction *otherMessage = other;
  return
      self.hasNodeid == otherMessage.hasNodeid &&
      (!self.hasNodeid || [self.nodeid isEqual:otherMessage.nodeid]) &&
      self.hasNode == otherMessage.hasNode &&
      (!self.hasNode || [self.node isEqual:otherMessage.node]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasNodeid) {
    hashCode = hashCode * 31 + [self.nodeid hash];
  }
  if (self.hasNode) {
    hashCode = hashCode * 31 + [self.node hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StSLoginActionBuilder()
@property (strong) StSLoginAction* result;
@end

@implementation StSLoginActionBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StSLoginAction alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StSLoginActionBuilder*) clear {
  self.result = [[StSLoginAction alloc] init];
  return self;
}
- (StSLoginActionBuilder*) clone {
  return [StSLoginAction builderWithPrototype:result];
}
- (StSLoginAction*) defaultInstance {
  return [StSLoginAction defaultInstance];
}
- (StSLoginAction*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StSLoginAction*) buildPartial {
  StSLoginAction* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StSLoginActionBuilder*) mergeFrom:(StSLoginAction*) other {
  if (other == [StSLoginAction defaultInstance]) {
    return self;
  }
  if (other.hasNodeid) {
    [self setNodeid:other.nodeid];
  }
  if (other.hasNode) {
    [self setNode:other.node];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StSLoginActionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StSLoginActionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setNodeid:[input readString]];
        break;
      }
      case 18: {
        [self setNode:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasNodeid {
  return result.hasNodeid;
}
- (NSString*) nodeid {
  return result.nodeid;
}
- (StSLoginActionBuilder*) setNodeid:(NSString*) value {
  result.hasNodeid = YES;
  result.nodeid = value;
  return self;
}
- (StSLoginActionBuilder*) clearNodeid {
  result.hasNodeid = NO;
  result.nodeid = @"";
  return self;
}
- (BOOL) hasNode {
  return result.hasNode;
}
- (NSString*) node {
  return result.node;
}
- (StSLoginActionBuilder*) setNode:(NSString*) value {
  result.hasNode = YES;
  result.node = value;
  return self;
}
- (StSLoginActionBuilder*) clearNode {
  result.hasNode = NO;
  result.node = @"";
  return self;
}
@end

@interface StSLoginResponse ()
@property SInt32 statecode;
@property (strong) NSString* node;
@end

@implementation StSLoginResponse

- (BOOL) hasStatecode {
  return !!hasStatecode_;
}
- (void) setHasStatecode:(BOOL) value_ {
  hasStatecode_ = !!value_;
}
@synthesize statecode;
- (BOOL) hasNode {
  return !!hasNode_;
}
- (void) setHasNode:(BOOL) value_ {
  hasNode_ = !!value_;
}
@synthesize node;
- (id) init {
  if ((self = [super init])) {
    self.statecode = 0;
    self.node = @"";
  }
  return self;
}
static StSLoginResponse* defaultStSLoginResponseInstance = nil;
+ (void) initialize {
  if (self == [StSLoginResponse class]) {
    defaultStSLoginResponseInstance = [[StSLoginResponse alloc] init];
  }
}
+ (StSLoginResponse*) defaultInstance {
  return defaultStSLoginResponseInstance;
}
- (StSLoginResponse*) defaultInstance {
  return defaultStSLoginResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasStatecode) {
    return NO;
  }
  if (!self.hasNode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatecode) {
    [output writeInt32:1 value:self.statecode];
  }
  if (self.hasNode) {
    [output writeString:2 value:self.node];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatecode) {
    size_ += computeInt32Size(1, self.statecode);
  }
  if (self.hasNode) {
    size_ += computeStringSize(2, self.node);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StSLoginResponse*) parseFromData:(NSData*) data {
  return (StSLoginResponse*)[[[StSLoginResponse builder] mergeFromData:data] build];
}
+ (StSLoginResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StSLoginResponse*)[[[StSLoginResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StSLoginResponse*) parseFromInputStream:(NSInputStream*) input {
  return (StSLoginResponse*)[[[StSLoginResponse builder] mergeFromInputStream:input] build];
}
+ (StSLoginResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StSLoginResponse*)[[[StSLoginResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StSLoginResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StSLoginResponse*)[[[StSLoginResponse builder] mergeFromCodedInputStream:input] build];
}
+ (StSLoginResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StSLoginResponse*)[[[StSLoginResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StSLoginResponseBuilder*) builder {
  return [[StSLoginResponseBuilder alloc] init];
}
+ (StSLoginResponseBuilder*) builderWithPrototype:(StSLoginResponse*) prototype {
  return [[StSLoginResponse builder] mergeFrom:prototype];
}
- (StSLoginResponseBuilder*) builder {
  return [StSLoginResponse builder];
}
- (StSLoginResponseBuilder*) toBuilder {
  return [StSLoginResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatecode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"statecode", [NSNumber numberWithInteger:self.statecode]];
  }
  if (self.hasNode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"node", self.node];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StSLoginResponse class]]) {
    return NO;
  }
  StSLoginResponse *otherMessage = other;
  return
      self.hasStatecode == otherMessage.hasStatecode &&
      (!self.hasStatecode || self.statecode == otherMessage.statecode) &&
      self.hasNode == otherMessage.hasNode &&
      (!self.hasNode || [self.node isEqual:otherMessage.node]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatecode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.statecode] hash];
  }
  if (self.hasNode) {
    hashCode = hashCode * 31 + [self.node hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StSLoginResponseBuilder()
@property (strong) StSLoginResponse* result;
@end

@implementation StSLoginResponseBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StSLoginResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StSLoginResponseBuilder*) clear {
  self.result = [[StSLoginResponse alloc] init];
  return self;
}
- (StSLoginResponseBuilder*) clone {
  return [StSLoginResponse builderWithPrototype:result];
}
- (StSLoginResponse*) defaultInstance {
  return [StSLoginResponse defaultInstance];
}
- (StSLoginResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StSLoginResponse*) buildPartial {
  StSLoginResponse* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StSLoginResponseBuilder*) mergeFrom:(StSLoginResponse*) other {
  if (other == [StSLoginResponse defaultInstance]) {
    return self;
  }
  if (other.hasStatecode) {
    [self setStatecode:other.statecode];
  }
  if (other.hasNode) {
    [self setNode:other.node];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StSLoginResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StSLoginResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setStatecode:[input readInt32]];
        break;
      }
      case 18: {
        [self setNode:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasStatecode {
  return result.hasStatecode;
}
- (SInt32) statecode {
  return result.statecode;
}
- (StSLoginResponseBuilder*) setStatecode:(SInt32) value {
  result.hasStatecode = YES;
  result.statecode = value;
  return self;
}
- (StSLoginResponseBuilder*) clearStatecode {
  result.hasStatecode = NO;
  result.statecode = 0;
  return self;
}
- (BOOL) hasNode {
  return result.hasNode;
}
- (NSString*) node {
  return result.node;
}
- (StSLoginResponseBuilder*) setNode:(NSString*) value {
  result.hasNode = YES;
  result.node = value;
  return self;
}
- (StSLoginResponseBuilder*) clearNode {
  result.hasNode = NO;
  result.node = @"";
  return self;
}
@end

@interface PushNotice ()
@property (strong) NSString* batchid;
@property (strong) NSString* serverNodes;
@end

@implementation PushNotice

- (BOOL) hasBatchid {
  return !!hasBatchid_;
}
- (void) setHasBatchid:(BOOL) value_ {
  hasBatchid_ = !!value_;
}
@synthesize batchid;
- (BOOL) hasServerNodes {
  return !!hasServerNodes_;
}
- (void) setHasServerNodes:(BOOL) value_ {
  hasServerNodes_ = !!value_;
}
@synthesize serverNodes;
- (id) init {
  if ((self = [super init])) {
    self.batchid = @"";
    self.serverNodes = @"";
  }
  return self;
}
static PushNotice* defaultPushNoticeInstance = nil;
+ (void) initialize {
  if (self == [PushNotice class]) {
    defaultPushNoticeInstance = [[PushNotice alloc] init];
  }
}
+ (PushNotice*) defaultInstance {
  return defaultPushNoticeInstance;
}
- (PushNotice*) defaultInstance {
  return defaultPushNoticeInstance;
}
- (BOOL) isInitialized {
  if (!self.hasBatchid) {
    return NO;
  }
  if (!self.hasServerNodes) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBatchid) {
    [output writeString:1 value:self.batchid];
  }
  if (self.hasServerNodes) {
    [output writeString:2 value:self.serverNodes];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBatchid) {
    size_ += computeStringSize(1, self.batchid);
  }
  if (self.hasServerNodes) {
    size_ += computeStringSize(2, self.serverNodes);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PushNotice*) parseFromData:(NSData*) data {
  return (PushNotice*)[[[PushNotice builder] mergeFromData:data] build];
}
+ (PushNotice*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushNotice*)[[[PushNotice builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PushNotice*) parseFromInputStream:(NSInputStream*) input {
  return (PushNotice*)[[[PushNotice builder] mergeFromInputStream:input] build];
}
+ (PushNotice*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushNotice*)[[[PushNotice builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PushNotice*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PushNotice*)[[[PushNotice builder] mergeFromCodedInputStream:input] build];
}
+ (PushNotice*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushNotice*)[[[PushNotice builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PushNoticeBuilder*) builder {
  return [[PushNoticeBuilder alloc] init];
}
+ (PushNoticeBuilder*) builderWithPrototype:(PushNotice*) prototype {
  return [[PushNotice builder] mergeFrom:prototype];
}
- (PushNoticeBuilder*) builder {
  return [PushNotice builder];
}
- (PushNoticeBuilder*) toBuilder {
  return [PushNotice builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBatchid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"batchid", self.batchid];
  }
  if (self.hasServerNodes) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverNodes", self.serverNodes];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PushNotice class]]) {
    return NO;
  }
  PushNotice *otherMessage = other;
  return
      self.hasBatchid == otherMessage.hasBatchid &&
      (!self.hasBatchid || [self.batchid isEqual:otherMessage.batchid]) &&
      self.hasServerNodes == otherMessage.hasServerNodes &&
      (!self.hasServerNodes || [self.serverNodes isEqual:otherMessage.serverNodes]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBatchid) {
    hashCode = hashCode * 31 + [self.batchid hash];
  }
  if (self.hasServerNodes) {
    hashCode = hashCode * 31 + [self.serverNodes hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PushNoticeBuilder()
@property (strong) PushNotice* result;
@end

@implementation PushNoticeBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PushNotice alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PushNoticeBuilder*) clear {
  self.result = [[PushNotice alloc] init];
  return self;
}
- (PushNoticeBuilder*) clone {
  return [PushNotice builderWithPrototype:result];
}
- (PushNotice*) defaultInstance {
  return [PushNotice defaultInstance];
}
- (PushNotice*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PushNotice*) buildPartial {
  PushNotice* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PushNoticeBuilder*) mergeFrom:(PushNotice*) other {
  if (other == [PushNotice defaultInstance]) {
    return self;
  }
  if (other.hasBatchid) {
    [self setBatchid:other.batchid];
  }
  if (other.hasServerNodes) {
    [self setServerNodes:other.serverNodes];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PushNoticeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PushNoticeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setBatchid:[input readString]];
        break;
      }
      case 18: {
        [self setServerNodes:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasBatchid {
  return result.hasBatchid;
}
- (NSString*) batchid {
  return result.batchid;
}
- (PushNoticeBuilder*) setBatchid:(NSString*) value {
  result.hasBatchid = YES;
  result.batchid = value;
  return self;
}
- (PushNoticeBuilder*) clearBatchid {
  result.hasBatchid = NO;
  result.batchid = @"";
  return self;
}
- (BOOL) hasServerNodes {
  return result.hasServerNodes;
}
- (NSString*) serverNodes {
  return result.serverNodes;
}
- (PushNoticeBuilder*) setServerNodes:(NSString*) value {
  result.hasServerNodes = YES;
  result.serverNodes = value;
  return self;
}
- (PushNoticeBuilder*) clearServerNodes {
  result.hasServerNodes = NO;
  result.serverNodes = @"";
  return self;
}
@end

@interface ServerNodesPush ()
@property ServerNodePushType type;
@property SInt32 count;
@property (strong) NSString* node;
@end

@implementation ServerNodesPush

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
  hasType_ = !!value_;
}
@synthesize type;
- (BOOL) hasCount {
  return !!hasCount_;
}
- (void) setHasCount:(BOOL) value_ {
  hasCount_ = !!value_;
}
@synthesize count;
- (BOOL) hasNode {
  return !!hasNode_;
}
- (void) setHasNode:(BOOL) value_ {
  hasNode_ = !!value_;
}
@synthesize node;
- (id) init {
  if ((self = [super init])) {
    self.type = ServerNodePushTypeJoin;
    self.count = 0;
    self.node = @"";
  }
  return self;
}
static ServerNodesPush* defaultServerNodesPushInstance = nil;
+ (void) initialize {
  if (self == [ServerNodesPush class]) {
    defaultServerNodesPushInstance = [[ServerNodesPush alloc] init];
  }
}
+ (ServerNodesPush*) defaultInstance {
  return defaultServerNodesPushInstance;
}
- (ServerNodesPush*) defaultInstance {
  return defaultServerNodesPushInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasCount) {
    return NO;
  }
  if (!self.hasNode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeEnum:1 value:self.type];
  }
  if (self.hasCount) {
    [output writeInt32:2 value:self.count];
  }
  if (self.hasNode) {
    [output writeString:3 value:self.node];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeEnumSize(1, self.type);
  }
  if (self.hasCount) {
    size_ += computeInt32Size(2, self.count);
  }
  if (self.hasNode) {
    size_ += computeStringSize(3, self.node);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ServerNodesPush*) parseFromData:(NSData*) data {
  return (ServerNodesPush*)[[[ServerNodesPush builder] mergeFromData:data] build];
}
+ (ServerNodesPush*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServerNodesPush*)[[[ServerNodesPush builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ServerNodesPush*) parseFromInputStream:(NSInputStream*) input {
  return (ServerNodesPush*)[[[ServerNodesPush builder] mergeFromInputStream:input] build];
}
+ (ServerNodesPush*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServerNodesPush*)[[[ServerNodesPush builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ServerNodesPush*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ServerNodesPush*)[[[ServerNodesPush builder] mergeFromCodedInputStream:input] build];
}
+ (ServerNodesPush*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServerNodesPush*)[[[ServerNodesPush builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ServerNodesPushBuilder*) builder {
  return [[ServerNodesPushBuilder alloc] init];
}
+ (ServerNodesPushBuilder*) builderWithPrototype:(ServerNodesPush*) prototype {
  return [[ServerNodesPush builder] mergeFrom:prototype];
}
- (ServerNodesPushBuilder*) builder {
  return [ServerNodesPush builder];
}
- (ServerNodesPushBuilder*) toBuilder {
  return [ServerNodesPush builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"count", [NSNumber numberWithInteger:self.count]];
  }
  if (self.hasNode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"node", self.node];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ServerNodesPush class]]) {
    return NO;
  }
  ServerNodesPush *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasCount == otherMessage.hasCount &&
      (!self.hasCount || self.count == otherMessage.count) &&
      self.hasNode == otherMessage.hasNode &&
      (!self.hasNode || [self.node isEqual:otherMessage.node]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.count] hash];
  }
  if (self.hasNode) {
    hashCode = hashCode * 31 + [self.node hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ServerNodesPushBuilder()
@property (strong) ServerNodesPush* result;
@end

@implementation ServerNodesPushBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ServerNodesPush alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ServerNodesPushBuilder*) clear {
  self.result = [[ServerNodesPush alloc] init];
  return self;
}
- (ServerNodesPushBuilder*) clone {
  return [ServerNodesPush builderWithPrototype:result];
}
- (ServerNodesPush*) defaultInstance {
  return [ServerNodesPush defaultInstance];
}
- (ServerNodesPush*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ServerNodesPush*) buildPartial {
  ServerNodesPush* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ServerNodesPushBuilder*) mergeFrom:(ServerNodesPush*) other {
  if (other == [ServerNodesPush defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasCount) {
    [self setCount:other.count];
  }
  if (other.hasNode) {
    [self setNode:other.node];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ServerNodesPushBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ServerNodesPushBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        ServerNodePushType value = (ServerNodePushType)[input readEnum];
        if (ServerNodePushTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        [self setCount:[input readInt32]];
        break;
      }
      case 26: {
        [self setNode:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (ServerNodePushType) type {
  return result.type;
}
- (ServerNodesPushBuilder*) setType:(ServerNodePushType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (ServerNodesPushBuilder*) clearType {
  result.hasType = NO;
  result.type = ServerNodePushTypeJoin;
  return self;
}
- (BOOL) hasCount {
  return result.hasCount;
}
- (SInt32) count {
  return result.count;
}
- (ServerNodesPushBuilder*) setCount:(SInt32) value {
  result.hasCount = YES;
  result.count = value;
  return self;
}
- (ServerNodesPushBuilder*) clearCount {
  result.hasCount = NO;
  result.count = 0;
  return self;
}
- (BOOL) hasNode {
  return result.hasNode;
}
- (NSString*) node {
  return result.node;
}
- (ServerNodesPushBuilder*) setNode:(NSString*) value {
  result.hasNode = YES;
  result.node = value;
  return self;
}
- (ServerNodesPushBuilder*) clearNode {
  result.hasNode = NO;
  result.node = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
